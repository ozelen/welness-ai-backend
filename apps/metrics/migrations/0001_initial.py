# Generated by Django 5.2.4 on 2025-08-17 11:39

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MetricCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='Icon class or identifier', max_length=50)),
                ('color', models.CharField(blank=True, help_text='Hex color code', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Metric Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('strength_training', 'Strength Training'), ('cardio', 'Cardio'), ('flexibility', 'Flexibility'), ('sports', 'Sports'), ('walking', 'Walking'), ('running', 'Running'), ('cycling', 'Cycling'), ('swimming', 'Swimming'), ('yoga', 'Yoga'), ('pilates', 'Pilates'), ('other', 'Other')], max_length=20)),
                ('intensity', models.CharField(choices=[('low', 'Low'), ('moderate', 'Moderate'), ('high', 'High'), ('very_high', 'Very High')], default='moderate', max_length=20)),
                ('duration_minutes', models.IntegerField(help_text='Duration in minutes')),
                ('calories_burned', models.FloatField(blank=True, help_text='Estimated calories burned', null=True)),
                ('distance_km', models.FloatField(blank=True, help_text='Distance in kilometers', null=True)),
                ('notes', models.TextField(blank=True)),
                ('activity_date', models.DateField(default=django.utils.timezone.now)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics_activitylogs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-activity_date', '-start_time'],
                'indexes': [models.Index(fields=['user', 'activity_date'], name='metrics_act_user_id_ead43f_idx'), models.Index(fields=['user', 'activity_type'], name='metrics_act_user_id_1f770f_idx')],
            },
        ),
        migrations.CreateModel(
            name='BodyMeasurement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric', models.CharField(choices=[('weight_kg', 'Weight (kg)'), ('height_cm', 'Height (cm)'), ('bmi', 'BMI'), ('body_fat_percentage', 'Body Fat (%)'), ('muscle_mass_percentage', 'Muscle Mass (%)'), ('waist_cm', 'Waist (cm)'), ('hip_cm', 'Hip (cm)'), ('chest_cm', 'Chest (cm)'), ('neck_cm', 'Neck (cm)'), ('arm_circumference_cm', 'Arm Circumference (cm)'), ('thigh_circumference_cm', 'Thigh Circumference (cm)'), ('calf_circumference_cm', 'Calf Circumference (cm)'), ('shoulder_cm', 'Shoulder Width (cm)'), ('body_water_percentage', 'Body Water (%)'), ('bone_mass_kg', 'Bone Mass (kg)'), ('visceral_fat_level', 'Visceral Fat Level')], max_length=50)),
                ('measurement_type', models.CharField(choices=[('baseline', 'Baseline'), ('target', 'Target'), ('log', 'Log'), ('goal', 'Goal')], default='log', max_length=20)),
                ('value', models.FloatField()),
                ('unit', models.CharField(blank=True, help_text='Unit of measurement', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics_bodymeasurements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'metric', 'timestamp'], name='metrics_bod_user_id_36980a_idx')],
            },
        ),
        migrations.CreateModel(
            name='HealthCalculator',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('weight_kg', models.FloatField(help_text='Body weight in kilograms')),
                ('height_cm', models.FloatField(help_text='Height in centimeters')),
                ('body_fat_percentage', models.FloatField(help_text='Body fat percentage')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('activity_level', models.CharField(choices=[('sedentary', 'Sedentary (little or no exercise)'), ('lightly_active', 'Lightly Active (light exercise 1-3 days/week)'), ('moderately_active', 'Moderately Active (moderate exercise 3-5 days/week)'), ('very_active', 'Very Active (hard exercise 6-7 days/week)'), ('extremely_active', 'Extremely Active (very hard exercise, physical job)')], default='moderately_active', max_length=20)),
                ('lbm_kg', models.FloatField(blank=True, help_text='Lean Body Mass in kg', null=True)),
                ('bmr_kcal', models.FloatField(blank=True, help_text='Basal Metabolic Rate in kcal', null=True)),
                ('tdee_kcal', models.FloatField(blank=True, help_text='Total Daily Energy Expenditure in kcal', null=True)),
                ('bmi', models.FloatField(blank=True, help_text='Body Mass Index', null=True)),
                ('body_fat_mass_kg', models.FloatField(blank=True, help_text='Body fat mass in kg', null=True)),
                ('activity_hours_per_week', models.FloatField(default=0, help_text='Total hours of exercise per week')),
                ('calculation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics_healthcalculators', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-calculation_date'],
                'indexes': [models.Index(fields=['user', 'calculation_date'], name='metrics_hea_user_id_b796d0_idx')],
            },
        ),
        migrations.CreateModel(
            name='LabResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(choices=[('blood', 'Blood Tests'), ('urine', 'Urine Tests'), ('hormone', 'Hormone Tests'), ('vitamin', 'Vitamin Tests'), ('mineral', 'Mineral Tests'), ('lipid', 'Lipid Panel'), ('metabolic', 'Metabolic Panel'), ('thyroid', 'Thyroid Tests'), ('other', 'Other')], max_length=20)),
                ('test_name', models.CharField(max_length=200)),
                ('value', models.FloatField()),
                ('unit', models.CharField(max_length=20)),
                ('reference_range', models.CharField(blank=True, help_text='Normal range (e.g., 70-100)', max_length=100)),
                ('status', models.CharField(choices=[('normal', 'Normal'), ('high', 'High'), ('low', 'Low'), ('critical', 'Critical'), ('pending', 'Pending')], default='normal', max_length=20)),
                ('lab_name', models.CharField(blank=True, max_length=200)),
                ('test_date', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics_labresults', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-test_date'],
                'indexes': [models.Index(fields=['user', 'category', 'test_date'], name='metrics_lab_user_id_c58d1a_idx')],
            },
        ),
    ]
