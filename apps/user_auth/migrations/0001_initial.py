# Generated by Django 5.2.4 on 2025-08-06 08:22

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40, unique=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('login_method', models.CharField(choices=[('email', 'Email'), ('google', 'Google'), ('telegram', 'Telegram')], default='email', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auth_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_auth_session',
            },
        ),
        migrations.CreateModel(
            name='GoogleCalendarIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendar_id', models.CharField(default='primary', max_length=255)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('sync_enabled', models.BooleanField(default=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_frequency', models.CharField(choices=[('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='daily', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='google_calendar', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_auth_google_calendar_integration',
            },
        ),
        migrations.CreateModel(
            name='GoogleDocsIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_folder_id', models.CharField(blank=True, max_length=255, null=True)),
                ('auto_backup_enabled', models.BooleanField(default=False)),
                ('backup_frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='weekly', max_length=20)),
                ('last_backup', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='google_docs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_auth_google_docs_integration',
            },
        ),
        migrations.CreateModel(
            name='TelegramIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_user_id', models.BigIntegerField(unique=True)),
                ('telegram_username', models.CharField(blank=True, max_length=100, null=True)),
                ('chat_id', models.BigIntegerField()),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('notification_types', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='telegram_integration', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_auth_telegram_integration',
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('profile_update', 'Profile Update'), ('account_created', 'Account Created'), ('password_changed', 'Password Changed'), ('email_verified', 'Email Verified'), ('integration_connected', 'Integration Connected'), ('integration_disconnected', 'Integration Disconnected'), ('social_account_connected', 'Social Account Connected'), ('social_account_disconnected', 'Social Account Disconnected')], max_length=30)),
                ('description', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_auth_user_activity',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('avatar', models.URLField(blank=True, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('language', models.CharField(default='en', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_auth_user_profile',
            },
        ),
        migrations.CreateModel(
            name='IntegrationToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('integration', models.CharField(choices=[('google_calendar', 'Google Calendar'), ('google_docs', 'Google Docs'), ('google_drive', 'Google Drive'), ('telegram_bot', 'Telegram Bot')], max_length=30)),
                ('access_token', models.TextField()),
                ('refresh_token', models.TextField(blank=True, null=True)),
                ('token_type', models.CharField(default='Bearer', max_length=20)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('scope', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integration_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_auth_integration_token',
                'unique_together': {('user', 'integration')},
            },
        ),
        migrations.CreateModel(
            name='SocialAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('google', 'Google'), ('telegram', 'Telegram')], max_length=20)),
                ('provider_account_id', models.CharField(max_length=255, unique=True)),
                ('provider_username', models.CharField(blank=True, max_length=255, null=True)),
                ('provider_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('provider_name', models.CharField(blank=True, max_length=255, null=True)),
                ('provider_picture', models.URLField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_auth_social_account',
                'unique_together': {('user', 'provider')},
            },
        ),
    ]
